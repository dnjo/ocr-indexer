AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  ocr-indexer

Globals:
  Api:
    BinaryMediaTypes:
      - image~1*

    MethodSettings: [{
      # Turn on Info logging
      "LoggingLevel": "INFO",

      # Enable Metrics
      "MetricsEnabled": True,

      # Trace-level Logging
      "DataTraceEnabled": True,

      # On all Paths & methods
      "ResourcePath": "/*",
      "HttpMethod": "*",
    }]
  Function:
    Timeout: 30
    MemorySize: 512

Resources:

  IndexerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: target/ocr-indexer-1.0.jar
      Handler: net.dnjo.handler.IndexImageOcrResultHandler::handleRequest
      Runtime: java8
      Timeout: 60
      Role: arn:aws:iam::334165208394:role/lambda-executor
      Events:
        OcrResults:
          Type: S3
          Properties:
            Bucket: !Ref Bucket
            Events: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: prefix
                    Value: results/

  UploadImageFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: target/ocr-indexer-1.0.jar
      Handler: net.dnjo.handler.UploadImageHandler::handleRequest
      Runtime: java8
      Timeout: 60
      Role: arn:aws:iam::334165208394:role/lambda-executor
      Environment:
        Variables:
          S3_BUCKET: ocr-input.dnjo.net
          S3_PREFIX: images
      Events:
        UploadImage:
          Type: Api
          Properties:
            Path: /images
            Method: post

  DeleteImageFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: target/ocr-indexer-1.0.jar
      Handler: net.dnjo.handler.DeleteImageHandler::handleRequest
      Runtime: java8
      Role: arn:aws:iam::334165208394:role/lambda-executor
      Events:
        DeleteImage:
          Type: Api
          Properties:
            Path: /images/{image_id}
            Method: delete

  GetImageBlobFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: target/ocr-indexer-1.0.jar
      Handler: net.dnjo.handler.GetImageBlobHandler::handleRequest
      Runtime: java8
      Role: arn:aws:iam::334165208394:role/lambda-executor
      Events:
        GetImageBlob:
          Type: Api
          Properties:
            Path: /images/{image_id}/blob
            Method: get

  GetImageFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: target/ocr-indexer-1.0.jar
      Handler: net.dnjo.handler.GetImageHandler::handleRequest
      Runtime: java8
      Role: arn:aws:iam::334165208394:role/lambda-executor
      Events:
        GetImage:
          Type: Api
          Properties:
            Path: /images/{image_id}
            Method: get

  UpdateImageFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: target/ocr-indexer-1.0.jar
      Handler: net.dnjo.handler.UpdateImageHandler::handleRequest
      Runtime: java8
      Role: arn:aws:iam::334165208394:role/lambda-executor
      Events:
        UpdateImage:
          Type: Api
          Properties:
            Path: /images/{image_id}
            Method: put

  SearchQueryFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: target/ocr-indexer-1.0.jar
      Handler: net.dnjo.handler.SearchQueryHandler::handleRequest
      Runtime: java8
      Role: arn:aws:iam::334165208394:role/lambda-executor
      Events:
        SearchQuery:
          Type: Api
          Properties:
            Path: /search
            Method: post

  ApiGwAccountConfig:
    Type: "AWS::ApiGateway::Account"
    Properties:
      CloudWatchRoleArn: arn:aws:iam::334165208394:role/apigateway-logs

  Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: "ocr-results.dnjo.net"
